Мной были написаны 2 варианта реализации циклического буфера FIFO на языке C++.
Запустив .exe файлы можно убедиться в правильности работы классов.

Вариант 1.
Fifo_static.h
+- Работа с элементами очереди основана на индексах массива.
+- Если пользователь переполняет очередь, то происходит перезапись самых старых элементов очереди.
+ Благодаря механизму статического полиморфизма, пользователь может выбирать тип хранимых в очереди объектов.
- В основе этой очереди лежит статический массив. То есть пользователь этого класса не может выбрать емкость очереди.

Вариант 2.
Fifo_dynamic.h
+- Работа с элементами очереди основана на указателях на элементы.
+- Если пользователь переполняет очередь, то функция add() уведомляет о переполненности буфера, а элемент не добавляется.
+ Пользователь может выбирать тип хранимых в очереди объектов. Благодаря механизму статического полиморфизма.
+ В основе лежит динамический массив. Пользователь класса волен выбрать емкость очереди. 
+ В деструкторе происходит высвобождение динамической памяти, из-за чего можно не беспокояться об утечке памяти.